class Underscore:
    def map(self, iterable, callback):
        for i in range(len(iterable)):
            iterable[i] = callback(iterable[i])
        return iterable
        
    def find(self, iterable, callback):
        for i in range(len(iterable)):
            if(callback(iterable[i])):
                return i
    def filter(self, iterable, callback):
        newlist=[]
        for i in range(len(iterable)):
            if(iterable[i]%2 == 0):
                newlist.append(iterable[i])
        return newlist
    def reject(self, iterable, callback):
        newlist=[]
        for i in range(len(iterable)):
            if(iterable[i]%2 != 0):
                newlist.append(iterable[i])
        return newlist
_ = Underscore()
evens = _.filter([1, 2, 3, 4, 5, 6], lambda x: x % 2 == 0)
print(_.map([1,2,3], lambda x: x*2))
print(_.find([1,2,3,4,5,6], lambda x: x>4))
print(_.filter([1,2,3,4,5,6], lambda x: x%2==0))
print(_.reject([1,2,3,4,5,6], lambda x: x%2==0))


